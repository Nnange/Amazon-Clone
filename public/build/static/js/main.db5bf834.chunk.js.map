{"version":3,"sources":["StateProvider.js","firebase.js","components/Home.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Home","state","action","console","log","type","basket","item","index","findIndex","basketItem","id","newBasket","splice","warn","user","App","dispatch","useEffect","onAuthStateChanged","authUser","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uZAGaA,G,8BAAeC,2BAGfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC7CC,IAIII,EAAgB,kBAAMC,qBAAWV,I,iBCKxCW,GAHcC,IAASC,cAXN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKMC,YACVV,IAASD,Q,8BC8DPY,I,gBClCApB,EApCC,SAACqB,EAAOC,GAEtB,OADAC,QAAQC,IAAIF,GACJA,EAAOG,MACb,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEK,OAAO,GAAD,mBAAML,EAAMK,QAAZ,CAAoBJ,EAAOK,SAErC,IAAK,qBACH,IAAMC,EAAQP,EAAMK,OAAOG,WACzB,SAACC,GAAD,OAAgBA,EAAWC,KAAOT,EAAOS,MAEvCC,EAAS,YAAOX,EAAMK,QAQ1B,OANGE,GAAS,EACRI,EAAUC,OAAOL,EAAO,GAExBL,QAAQW,KAAR,mCAAyCZ,EAAOS,GAAhD,2BAGG,2BACAV,GADP,IAEIK,OAAOM,IAGX,IAAK,WACF,OAAO,2BACAX,GADP,IAEIc,KAAMb,EAAOa,OAGtB,QACE,OAAOd,I,iBCiBEe,MAhDf,WAAgB,IAAD,EACU9B,IADV,yCACF+B,EADE,KAIbC,qBAAU,WAER9B,EAAK+B,oBAAmB,SAAAC,GACtBjB,QAAQC,IAAI,mBAAoBgB,GAI9BH,EAFCG,EAEQ,CACPf,KAAM,WACNU,KAAMK,GAIC,CACPf,KAAM,WACNU,KAAM,YAIX,KCrBeM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAe/C,aHVS,CAC1ByB,OAAQ,GACRS,KAAM,MGQuCnC,QAASA,GAClD,kBAAC,EAAD,QAGJiD,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.db5bf834.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer } from 'react';\r\n\r\n// Prepares the datalayer\r\nexport const StateContext = createContext();\r\n\r\n// Wrap the app and provide the Data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDllHcqfILGAcf7CkRMnKiczLdAngKkZX0\",\r\n  authDomain: \"amaclone-8e713.firebaseapp.com\",\r\n  databaseURL: \"https://amaclone-8e713.firebaseio.com\",\r\n  projectId: \"amaclone-8e713\",\r\n  storageBucket: \"amaclone-8e713.appspot.com\",\r\n  messagingSenderId: \"596507992825\",\r\n  appId: \"1:596507992825:web:1587b05902c24f2667f828\",\r\n  measurementId: \"G-LNV7Y0P8PB\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };\r\n","import React from \"react\";\r\nimport \"../CSS/Home.css\";\r\nimport Product from \"./Product\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__container\">\r\n        <img\r\n          className=\"home__image\"\r\n          src=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB4286842220_.jpg\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"home__row\">\r\n          <Product\r\n            id=\"45656465\"\r\n            title=\"The lean startup\"\r\n            price={29.99}\r\n            image=\"https://miro.medium.com/max/672/0*s3P60uHNCgIndxtR.jpg\"\r\n            rating={5}\r\n          />\r\n          <Product\r\n            id=\"23445930\"\r\n            title=\"Amazon Echo (3rd generation) | Smart speaker with alexa, Charcoal Fabric\"\r\n            price={98.99}\r\n            image=\"https://lh3.googleusercontent.com/Iq0LxhParygVVgjgZfdKGB1XDpP6vJ7aw3jI1M7L7LVRDQ0fvr4jIstENU34LH_fGf7q5Q=s85\"\r\n            rating={5}\r\n          />\r\n          <Product\r\n            id=\"3254354345\"\r\n            title=\"New Apple iPad Pro (12.9-inch, WiFi, 128GB) - Siver (4th Generation)\"\r\n            price={328.99}\r\n            image=\"https://m.media-amazon.com/images/I/6162WMQWhVL._AC_UY218_.jpg\"\r\n            rating={5}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"home__row\">\r\n          <Product\r\n            id=\"3254354345\"\r\n            title=\"This smart TV connects you to some of the most popular video and movie streaming apps to date.\"\r\n            price={1200}\r\n            image=\"https://images-na.ssl-images-amazon.com/images/I/71tN5cFBvFL._AC_SL1500_.jpg\"\r\n            rating={4}\r\n          />\r\n\r\n          <Product\r\n            id=\"3254354345\"\r\n            title=\"Nintendo Switch 32GB Console Video Games w/ 32GB Memory Card\"\r\n            price={449.99}\r\n            image=\"https://m.media-amazon.com/images/I/61445UADu9L._AC_UL320_.jpg\"\r\n            rating={4}\r\n          />\r\n\r\n          <Product\r\n            id=\"3254354345\"\r\n            title=\"PlayStation 4 Slim 1TB Limited Edition Console - Days of Play Bundle\r\n            4.8 out of 5 stars\"\r\n            price={388.99}\r\n            image=\"https://m.media-amazon.com/images/I/41GGPRqTZtL._AC_UL320_.jpg\"\r\n            rating={4}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"home__row\">\r\n        <Product\r\n            id=\"3254354345\"\r\n            title=\"adidas Men's Grand Court Sneaker\"\r\n            price={46.35}\r\n            image=\"https://m.media-amazon.com/images/I/717-YbkoA-L._AC_UL320_.jpg\"\r\n            rating={3}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export const initialState = {\r\n  basket: [],\r\n  user: null\r\n};\r\n\r\n// Selector\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"ADD_TO_BASKET\":\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n    case \"REMOVE_FROM_BASKET\":\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n      let newBasket = [...state.basket];\r\n\r\n      if(index >= 0){\r\n          newBasket.splice(index, 1)\r\n      } else {\r\n          console.warn(`Cant remove product (id: ${action.id}) as its not in basket`)\r\n      }\r\n\r\n      return {\r\n          ...state, \r\n          basket:newBasket\r\n      }\r\n\r\n      case \"SET_USER\":\r\n         return {\r\n             ...state,\r\n             user: action.user\r\n         } \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, {useEffect} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Checkout from \"./components/Checkout\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n\n  useEffect(() => {\n    \n    auth.onAuthStateChanged(authUser => {\n      console.log('The USER is >>>>', authUser);\n\n      if(authUser){\n        //the user just ligged in /\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        }) \n      } else {\n        // the user is logged lout\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, [])\n  return (\n    // BEM\n\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}